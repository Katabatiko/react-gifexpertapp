{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catgs","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAiBhD,OACE,0BAAMC,SAVa,SAAEC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAK,OAAMP,GAAN,mBAAqBO,OACzCN,EAAc,OAMd,2BACEO,KAAK,OACLC,MAAST,EACTU,SAlBoB,SAAEP,GAC1BF,EAAcE,EAAEQ,OAAOF,QAkBnBG,YAAa,oBAEf,6C,uBC3BOC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAWH,GAD7C,+DAEFI,MAAOF,GAFL,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAadM,GAbc,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEnC,OACE,yBAAKc,UAAU,SACb,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,KCHEO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAc,IAAD,EAEff,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAJ8B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAkBzC,OAXAC,qBAAU,WACRxB,EAASC,GACNwB,MAAM,SAAAC,GACLH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAId,CAACpB,IAEGqB,EDfyBK,CAAc1B,GAAhCQ,EAFyB,EAE/BD,KAAYa,EAFmB,EAEnBA,QAGpB,OACE,oCACA,wBAAIJ,UAAU,qCAAsChB,GAElDoB,GAAW,uBAAGJ,UAAU,gEAAb,iBAEb,yBAAKA,UAAU,YAETR,EAAKC,KAAK,SAAAC,GAAG,OACT,kBAAC,EAAD,eAAaiB,IAAMjB,EAAIC,IAAUD,UEgBhCkB,EA9BM,WAAO,IAAD,EAEW3C,mBAAS,CAAC,cAFrB,mBAElB4C,EAFkB,KAEN7C,EAFM,KASzB,OACE,oCACE,4CAEA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEI6C,EAAWpB,KAAK,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACE2B,IAAM3B,EACNA,SAAWA,UCnBzB8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.62a95713.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n//export const AddCategory = ({ addCategory }) => {\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = ( e ) =>{\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = ( e ) =>{\r\n    e.preventDefault();\r\n    //addCategory( inputValue );\r\n    if( inputValue.trim().length > 2){\r\n      setCategories( catgs => [ inputValue, ...catgs ] );\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit } >\r\n      <input\r\n        type='text'\r\n        value= { inputValue }\r\n        onChange= { handleInputChange }\r\n        placeholder= 'Nueva categoria'\r\n      />\r\n      <button  >Agregar</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async ( category )=>{\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=7MwXGjTlnjdmNI4O77QG9VQtl4K1v0jV`\r\n  const resp = await fetch( url )\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map( img =>{\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url // la interrogaciÃ³n es por si no viene images\r\n    }\r\n  })\r\n\r\n  return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  //console.log(title)\r\n  return (\r\n    <div className='card ' >\r\n      <img src={ url } alt={ title } />\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data: gifs, loading } = useFetchGifs( category );\r\n\r\n\r\n  return (\r\n    <>\r\n    <h3 className='animate__animated animate__bounce'>{ category }</h3>\r\n\r\n    { loading && <p className='animate__animated animate__pulse animate__infinite\tinfinite'>'Cargando...'</p> }\r\n      \r\n    <div className='cardGrid'>\r\n        {\r\n          gifs.map( img  => (\r\n              <GifGridItem key={ img.id } { ...img } />\r\n            )\r\n          )\r\n        }\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs( category )\r\n      .then( imgs => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n      })\r\n    \r\n  }, [category]);\r\n\r\n  return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  // const handleAdd = (value) =>{\r\n  //   setCategories( [ ...categories, value ] );\r\n  //   // setCategories( catgs => [ ...catgs, value ]); EQUIVALENTE: puede ser un callback cuyo argumento es el estado anterior y regresa el nuevo estado\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      {/* <AddCategory addCategory={ handleAdd } /> */}\r\n      <AddCategory setCategories={ setCategories } />\r\n      <hr/>\r\n\r\n      <ol>\r\n        {\r\n          categories.map( category => (\r\n            <GifGrid\r\n              key={ category }\r\n              category={ category }\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}